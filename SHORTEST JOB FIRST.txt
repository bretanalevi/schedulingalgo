#include<iostream>

using namespace std;


int main()
{
	int menu1 = 0; // menu

		int n1, bt1[20], at1[20], wt1[20], st1[20], tat1[20], i1, j1;
		double avwt1 = 0, avtat1 = 0;

		int bt2[20], at2[20], lat2=0,p2[20], st2[20], wt2[20], tat2[20], i2, j2, n2, total2 = 0, pos2, temp2;
		double avg_wt2=0, avg_tat2=0;

		int bt3[20], p3[20], st3[20], at3[20], wt3[20], tat3[20], pr3[20], i3, j3, n3, total3 = 0, pos3, temp3;
		double avg_wt3 = 0, avg_tat3 = 0;

		int count4, j4, n4, time4, remain4, flag4 = 0, time_quantum4;
		int wait_time4 = 0, turnaround_time4 = 0, at4[10], bt4[10], rt4[10];

			cout << "SHORTEST JOB FIRST SCHEDULING ALGORITHM\n\n";
			cout << "Enter Number of 4 Process: ";
			n2 = 4;
			cout << endl;
			for (i2 = 0;i2<n2;i2++)
			{
				cout << "\nProcess " << i2 + 1;
				cout << "\nArrival Time: ";
				cin >> at2[i2];
				cout << "Burst Time: ";
				cin >> bt2[i2];
				p2[i2] = i2;           //contains process number
			}

			for (i2 = 0;i2<n2;i2++)
			{
				pos2 = i2;
				for (j2 = i2 + 1;j2<n2;j2++)
				{
					if (at2[pos2]>at2[j2])
						pos2 = j2;
				}

				temp2 = at2[i2];
				at2[i2] = at2[pos2];
				at2[pos2] = temp2;

			}

			at2[0] = lat2;
			
			for (i2 = 0;i2<n2;i2++)  // SORTING ARRIVAL , BURST USING SELECTION SORT
			{
				pos2 = i2;
				for (j2 = i2 + 1;j2<n2;j2++)
				{
					if (bt2[pos2]>bt2[j2])
						pos2 = j2;
				}

				temp2 = bt2[i2];
				bt2[i2] = bt2[pos2];
				bt2[pos2] = temp2;

				temp2 = p2[i2];
				p2[i2] = p2[pos2];
				p2[pos2] = temp2;

				temp2 = at2[i2];
				at2[i2] = at2[pos2];
				at2[pos2] = temp2;

				temp2 = st2[i2];
				st2[i2] = st2[pos2];
				st2[pos2] = temp2;

			}
			
			wt2[0] = 0;            //waiting time for first process will be zero
			st2[0] = lat2;
			
							   //calculate waiting time
			for (i2 = 1;i2 < n2+1;i2++)
			{
					st2[i2] = st2[i2-1] + bt2[i2-1];
					wt2[i2] = st2[i2] - at2[i2];
			}

			for (i2 = 0;i2<n2;i2++)
			{
				tat2[i2] = bt2[i2] + wt2[i2];
				avg_wt2 += wt2[i2];
				avg_tat2 += tat2[i2];

			}

			cout << endl << endl;

			for(i2=0;i2<n2;i2++)    // SHOWING GANT CHART
			{
				cout << "-------";
			}
			
			cout << endl;
			cout << "|";
			for(i2=0;i2<n2;i2++)
			{
				cout << "  P" << p2[i2] << "  |";
			}

			cout << endl;
			for(i2=0;i2<n2;i2++)
			{
				cout << "-------";
			}
			cout << endl;
			cout << lat2 ;
			for(i2=1;i2<n2+1;i2++)
			{
				cout << "      " << st2[i2];
			}
			


			cout << endl << endl;
			for (i2 = 0;i2<n2;i2++) //SORT AGAIN WITH WAITING TIME AND TURNAROUND TIME
			{
				pos2 = i2;
				for (j2 = i2 + 1;j2<n2;j2++)
				{
					if (p2[j2]<p2[pos2])
						pos2 = j2;
				}

				temp2 = bt2[i2];
				bt2[i2] = bt2[pos2];
				bt2[pos2] = temp2;

				temp2 = p2[i2];
				p2[i2] = p2[pos2];
				p2[pos2] = temp2;

				temp2 = at2[i2];
				at2[i2] = at2[pos2];
				at2[pos2] = temp2;

				temp2 = wt2[i2];
				wt2[i2] = wt2[pos2];
				wt2[pos2] = temp2;

				temp2 = tat2[i2];
				tat2[i2] = tat2[pos2];
				tat2[pos2] = temp2;

				temp2 = st2[i2];
				st2[i2] = st2[pos2];
				st2[pos2] = temp2;
			}

			

			//average waiting time
			total2 = 0;

			

			cout << "\nProcess\t    Arrival Time\t Burst Time \tWaiting Time\tTurnaround Time";
			for (i2 = 0;i2<n2;i2++)
			{
				cout << "\nP[" << p2[i2] << "]\t\t  " << at2[i2] << "\t\t    " << bt2[i2] << "\t\t    " << wt2[i2] << "\t\t\t" << tat2[i2];
			}

			avg_wt2 /= i2;
			avg_tat2 /= i2;     //average turnaround time
			cout << "\n\nAverage Waiting Time = " << avg_wt2;
			cout << "\nAverage Turnaround Time = " << avg_tat2;
			
			
			

	system("pause>0");
}